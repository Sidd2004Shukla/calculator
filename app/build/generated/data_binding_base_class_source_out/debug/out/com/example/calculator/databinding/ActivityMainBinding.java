// Generated by view binder compiler. Do not edit!
package com.example.calculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.calculator.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton clear;

  @NonNull
  public final MaterialButton divide;

  @NonNull
  public final MaterialButton dot;

  @NonNull
  public final MaterialButton eight;

  @NonNull
  public final MaterialButton emoji;

  @NonNull
  public final MaterialButton equal;

  @NonNull
  public final MaterialButton five;

  @NonNull
  public final MaterialButton four;

  @NonNull
  public final GridLayout gv1;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final MaterialButton minus;

  @NonNull
  public final MaterialButton multiply;

  @NonNull
  public final MaterialButton nine;

  @NonNull
  public final MaterialButton one;

  @NonNull
  public final MaterialButton plus;

  @NonNull
  public final MaterialButton seven;

  @NonNull
  public final MaterialButton six;

  @NonNull
  public final MaterialButton three;

  @NonNull
  public final TextView tv1;

  @NonNull
  public final TextView tv2;

  @NonNull
  public final MaterialButton two;

  @NonNull
  public final MaterialButton zeo;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull MaterialButton clear,
      @NonNull MaterialButton divide, @NonNull MaterialButton dot, @NonNull MaterialButton eight,
      @NonNull MaterialButton emoji, @NonNull MaterialButton equal, @NonNull MaterialButton five,
      @NonNull MaterialButton four, @NonNull GridLayout gv1, @NonNull ConstraintLayout main,
      @NonNull MaterialButton minus, @NonNull MaterialButton multiply, @NonNull MaterialButton nine,
      @NonNull MaterialButton one, @NonNull MaterialButton plus, @NonNull MaterialButton seven,
      @NonNull MaterialButton six, @NonNull MaterialButton three, @NonNull TextView tv1,
      @NonNull TextView tv2, @NonNull MaterialButton two, @NonNull MaterialButton zeo) {
    this.rootView = rootView;
    this.clear = clear;
    this.divide = divide;
    this.dot = dot;
    this.eight = eight;
    this.emoji = emoji;
    this.equal = equal;
    this.five = five;
    this.four = four;
    this.gv1 = gv1;
    this.main = main;
    this.minus = minus;
    this.multiply = multiply;
    this.nine = nine;
    this.one = one;
    this.plus = plus;
    this.seven = seven;
    this.six = six;
    this.three = three;
    this.tv1 = tv1;
    this.tv2 = tv2;
    this.two = two;
    this.zeo = zeo;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.clear;
      MaterialButton clear = ViewBindings.findChildViewById(rootView, id);
      if (clear == null) {
        break missingId;
      }

      id = R.id.divide;
      MaterialButton divide = ViewBindings.findChildViewById(rootView, id);
      if (divide == null) {
        break missingId;
      }

      id = R.id.dot;
      MaterialButton dot = ViewBindings.findChildViewById(rootView, id);
      if (dot == null) {
        break missingId;
      }

      id = R.id.eight;
      MaterialButton eight = ViewBindings.findChildViewById(rootView, id);
      if (eight == null) {
        break missingId;
      }

      id = R.id.emoji;
      MaterialButton emoji = ViewBindings.findChildViewById(rootView, id);
      if (emoji == null) {
        break missingId;
      }

      id = R.id.equal;
      MaterialButton equal = ViewBindings.findChildViewById(rootView, id);
      if (equal == null) {
        break missingId;
      }

      id = R.id.five;
      MaterialButton five = ViewBindings.findChildViewById(rootView, id);
      if (five == null) {
        break missingId;
      }

      id = R.id.four;
      MaterialButton four = ViewBindings.findChildViewById(rootView, id);
      if (four == null) {
        break missingId;
      }

      id = R.id.gv1;
      GridLayout gv1 = ViewBindings.findChildViewById(rootView, id);
      if (gv1 == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.minus;
      MaterialButton minus = ViewBindings.findChildViewById(rootView, id);
      if (minus == null) {
        break missingId;
      }

      id = R.id.multiply;
      MaterialButton multiply = ViewBindings.findChildViewById(rootView, id);
      if (multiply == null) {
        break missingId;
      }

      id = R.id.nine;
      MaterialButton nine = ViewBindings.findChildViewById(rootView, id);
      if (nine == null) {
        break missingId;
      }

      id = R.id.one;
      MaterialButton one = ViewBindings.findChildViewById(rootView, id);
      if (one == null) {
        break missingId;
      }

      id = R.id.plus;
      MaterialButton plus = ViewBindings.findChildViewById(rootView, id);
      if (plus == null) {
        break missingId;
      }

      id = R.id.seven;
      MaterialButton seven = ViewBindings.findChildViewById(rootView, id);
      if (seven == null) {
        break missingId;
      }

      id = R.id.six;
      MaterialButton six = ViewBindings.findChildViewById(rootView, id);
      if (six == null) {
        break missingId;
      }

      id = R.id.three;
      MaterialButton three = ViewBindings.findChildViewById(rootView, id);
      if (three == null) {
        break missingId;
      }

      id = R.id.tv1;
      TextView tv1 = ViewBindings.findChildViewById(rootView, id);
      if (tv1 == null) {
        break missingId;
      }

      id = R.id.tv2;
      TextView tv2 = ViewBindings.findChildViewById(rootView, id);
      if (tv2 == null) {
        break missingId;
      }

      id = R.id.two;
      MaterialButton two = ViewBindings.findChildViewById(rootView, id);
      if (two == null) {
        break missingId;
      }

      id = R.id.zeo;
      MaterialButton zeo = ViewBindings.findChildViewById(rootView, id);
      if (zeo == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, clear, divide, dot, eight, emoji,
          equal, five, four, gv1, main, minus, multiply, nine, one, plus, seven, six, three, tv1,
          tv2, two, zeo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
